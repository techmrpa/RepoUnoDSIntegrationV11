<Activity mc:Ignorable="sap sap2010 sads" x:Class="CustomWorkflowDesigner.Activity1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:e="clr-namespace:Excel;assembly=Excel"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="config_Path" Type="InArgument(x:String)" />
    <x:Property Name="in_Settings" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object)))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CustomWorkflowDesigner.Activity1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities.Debugger</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence DisplayName="ReadSettings" sad:XamlDebuggerXmlReader.FileName="" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Object" Name="workBook" />
        <Variable x:TypeArguments="sd:DataTable" Name="config_Datatable" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Queue_Settings" />
        <Variable x:TypeArguments="x:String" Name="GroupName" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Assets_Settings" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Other_Settings" />
        <Variable x:TypeArguments="s:String[]" Default="[{&quot;QueueSettings&quot;,&quot;AssetSettings&quot;,&quot;OtherSettings&quot;}]" Name="Settings" />
      </Sequence.Variables>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object))">[in_Settings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object))">[new Dictionary(of String, Dictionary(of String, object))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Assets_Settings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Queue_Settings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Other_Settings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
        </Assign.Value>
      </Assign>
      <e:CreateOrOpenExcel CreateExcel="True" DisableAlert="False" sap2010:WorkflowViewState.IdRef="CreateOrOpenExcel_1" Path="[config_Path]" RepairFile="False" WindowState="Maximize" WorkBook="[workBook]" />
      <e:ReadRangeOfData Range="{x:Null}" DataTableOut="[config_Datatable]" ExpandMergedCells="False" sap2010:WorkflowViewState.IdRef="ReadRangeOfData_1" ShowFirstRowAsDataTableHeader="True" WorkBook="[workBook]" WorksheetNumber="[1]" />
      <e:CloseExcel sap2010:WorkflowViewState.IdRef="CloseExcel_1" Workbook="[workBook]" />
      <ForEach x:TypeArguments="sd:DataRow" DisplayName="ForEach&lt;DataRow&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[config_Datatable.AsEnumerable()]">
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="variable1" />
              <Variable x:TypeArguments="x:String" Name="variable3" />
            </Sequence.Variables>
            <If Condition="[(NOT String.IsNullOrEmpty(row(&quot;Group&quot;).ToString.Trim))  AND  ( String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim) )AND (String.IsNullOrEmpty(row(&quot;Value&quot;).ToString.Trim))]" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[GroupName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[row("Group").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[GroupName.Trim = Settings(0)]" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Queue_Settings(row("Name").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
              </If.Then>
            </If>
            <If Condition="[GroupName.Trim =Settings(1)]" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Assets_Settings(row("Name").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
              </If.Then>
            </If>
            <If Condition="[GroupName.Trim = Settings(2)]" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Other_Settings(row("Name").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ForEach>
      <ForEach x:TypeArguments="x:String" DisplayName="ForEach&lt;String&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Settings]">
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <If Condition="[item = &quot;QueueSettings&quot;]" sap2010:WorkflowViewState.IdRef="If_12">
            <If.Then>
              <maes:AddToDictionary x:TypeArguments="x:String, scg:Dictionary(x:String, x:Object)" Dictionary="[in_Settings]" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_7" Key="QueueSettings" Value="[Queue_Settings]" />
            </If.Then>
            <If.Else>
              <If Condition="[item = &quot;AssetSettings&quot;]" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <maes:AddToDictionary x:TypeArguments="x:String, scg:Dictionary(x:String, x:Object)" Dictionary="[in_Settings]" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_8" Key="AssetSettings" Value="[Assets_Settings]" />
                </If.Then>
                <If.Else>
                  <maes:AddToDictionary x:TypeArguments="x:String, scg:Dictionary(x:String, x:Object)" Dictionary="[in_Settings]" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_9" Key="OtherSettings" Value="[Other_Settings]" />
                </If.Else>
              </If>
            </If.Else>
          </If>
        </ActivityAction>
      </ForEach>
    </Sequence>
    <sads:DebugSymbol.Symbol>d0VEOlxUZWNoTVxVbm9EU1xTYW1wbGVzXFVubyBTdGFuZGFyZCBQcm9jZXNzIFRlbXBsYXRlKFVTUFQpXEVudHJ5LnhhbWxLPwPWAQ4CAQFABdQBEAIBAkg4SIsBAgEDSgdREAIBYVIHWRACAV1aB2EQAgFZYgdpEAIBVWoHatEBAgFQawdr7gECAUpsB2xcAgFHbQe9ARECAR++AQfTARECAQRPZk+gAQIBZExnTHQCAWJXTFdvAgFgVE1UXgIBXl9MX28CAVxcTVxdAgFaZ0xnbwIBWGRNZF0CAVZqwgFqzgECAVNqf2qOAQIBUWvmAWvrAQIBT2s4a0wCAU1ryQFr1QECAUtsTWxZAgFIbYcBbaoBAgFGcgu7ARYCASC+AYQBvgGQAQIBHcMBC9EBEAIBBXcNhAESAgE/hQENlgESAgE1lwENqAESAgErqQENugESAgEhwwEZwwE9AgEGxQEPxQHkAQIBF8gBD88BFAIBCHcbd+MBAgFAeRGCARwCAUGFARuFATsCATaHARGUARYCATmXARuXAToCASyZARGmARYCAS+pARupATsCASKrARG4ARYCASXFAc8BxQHhAQIBG8UBb8UBfgIBGcUBuQHFAcgBAgEYyAEdyAFBAgEJygETygHpAQIBEc0BE80B6AECAQt6E4EBHAIBQocBH4cBYAIBOokBFZIBIAIBO5kBH5kBYAIBMJsBFaQBIAIBMasBH6sBYAIBJq0BFbYBIAIBJ8oB0wHKAeYBAgEVygFzygGCAQIBE8oBvQHKAcwBAgESzQHTAc0B5QECAQ/NAXPNAYIBAgENzQG9Ac0BzAECAQx/Pn9VAgFFfD98SgIBQ4oBF5EBIAIBPJwBF6MBIAIBMq4BF7UBIAIBKI8BQo8BUAIBPowBQ4wBbgIBPaEBQqEBUAIBNJ4BQ54BbwIBM7MBQrMBUAIBKrABQ7ABbgIBKQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="CreateOrOpenExcel_1" sap:VirtualizedContainerService.HintSize="719,22" />
      <sap2010:ViewStateData Id="ReadRangeOfData_1" sap:VirtualizedContainerService.HintSize="719,22" />
      <sap2010:ViewStateData Id="CloseExcel_1" sap:VirtualizedContainerService.HintSize="719,22" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="589,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="589,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="589,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="589,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="611,2016">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="719,2164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToDictionary`2_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToDictionary`2_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="689,356" />
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="719,504" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="741,3418">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="763,3542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CustomWorkflowDesigner.Activity1_1" sap:VirtualizedContainerService.HintSize="803,3622" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>